<!DOCTYPE html>

<head>
    <link rel="shortcut icon" type="image/x-icon" href="/output-onlinepngtools.png" />
    <title>Room: <%=roomId%>
    </title>
    <script>

        let chat_message = (userId, message, time) => {
            document.getElementById('chat').innerHTML += '<span class="chatmessage">' + time + ` <span class="chatuser" style='color:blue;'>${userId}: </span>${message}` + "</span><br>";
        };

        document.addEventListener('DOMContentLoaded', () => {
            setInterval(() => {
                document.getElementById('clock').innerHTML = new Date().toTimeString().slice(0, 8)
            }, 1000);

            chat_message('Admin', 'This is chat! Welcome :)', new Date().toTimeString().slice(0, 8))
        });
    </script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.8/css/all.css">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <link rel="stylesheet" href="/style.css">
</head>
<html>

<body>
    <nav class="navbar navbar-dark bg-dark">
        <div class="cont" style="min-width: 100%;justify-content: space-between;">
            <a class="navbar-brand" href="https://github.com/reuzun/watchOnline-Nodejs" target="_blank">
                <img src="/output-onlinepngtools.png" width="40" height="40" class="d-inline-block align-top"
                    alt="Logo">
                <span id="brandname">
                    WatchOnline/<%=roomId%>
                </span>
            </a>
            <span id="quote" style="color:white;font-size: 20px;padding-right: 7%;">
                “e^(iπ)+1 = 0”
                ― Leonhard Euler
            </span>
            <span id="clock" class="noselect" style="color:white;font-size: 20px;">00.00.00</span>
        </div>

    </nav>

    <div class="cont" style="padding-top: 2%;">
        <!-- Left part -- Playlist Section -- -->
        <div id="leftpart">
            <fieldset>
                <legend>Playlist</legend>
                <table class="table">
                    <thead>
                        <tr>
                            <th style="width: 11%;">#</th>
                            <th style="width: 89%;">Video</th>
                            <!--<th scope="col"><button>Hide</button></th>-->
                        </tr>
                    </thead>
                    <tbody id="playlist">
                    </tbody>
                </table>
            </fieldset>
        </div>
        <!-- Middle part -- Player Section -- -->
        <div id="middlepart">
            <div class="cont rightside" style="flex-direction: column;">
                <div class="input-group mb-3">
                    <input id="link" type="text" class="form-control" placeholder="Video Link" aria-label="Video Link"
                        aria-describedby="basic-addon2">
                    <div class="input-group-append">
                        <button id="submit" class="btn btn-dark" type="button">Play Video</button>
                        <button id="submitqueue" class="btn btn-light btn-outline-dark" type="button">Queue
                            Video</button>
                        <button id="skipvideo"
                            style="margin-top:75px;position: absolute;  background-color: transparent; color:coral"
                            class="btn btn-light btn-outline-dark" type="button">Skip
                            Video</button>
                    </div>
                </div>

                <div id="videoContainer">
                    <div id="player"></div>
                </div>
            </div>
        </div>
        <!-- Right part -- Chat Section -- -->
        <div id="rightpart">
            <div class="cont" style="flex-direction: column;">
                <div id="chat" readonly class="form-control"></div>
                <div id="peoplelist"
                    style="position: absolute;opacity: 0;margin-top:-400px;float:right;z-index: -1;color:bisque">
                </div>

                <div class="input-group mb-3">
                    <input id="message" type="text" class="form-control" placeholder="Message!" aria-label="Message!"
                        aria-describedby="basic-addon2">
                    <div class="input-group-append">
                        <button id="chatsubmit" class="btn btn-dark" type="button">Send</button>
                        <button id="people" class="btn btn-dark" style="float:right;"><i class="fa fa-users"
                                aria-hidden="true"></i></button>
                    </div>
                </div>

            </div>
        </div>

    </div>
    <div id="footer">
        <footer class="bg-dark text-center text-white">
            <!-- Grid container -->
            <div class="container p-4">
                <!--Grid row-->
                <div class="row">
                    <!--Grid column-->
                    <div class="col-lg-6 col-md-12 mb-4 mb-md-0">
                        <h5 class="text-uppercase">What is WatchOnline</h5>

                        <p>
                            This is a website that you can watch youtube videos with your friends simultaneously.<br>
                            For communication you can use side links
                        </p>
                    </div>
                    <!--Grid column-->

                    <!--Grid column-->
                    <div class="col-lg-6 col-md-6 mb-4 mb-md-0">
                        <h5 class="text-uppercase">Links</h5>

                        <ul class="list-unstyled mb-0">
                            <li>
                                <!-- Github -->
                                <a class="btn btn-outline-light btn-floating m-1 iconlink"
                                    href="https://www.github.com/reuzun/watchOnline-Nodejs" target="_blank"
                                    role="button"><i class="fab fa-github"></i>Github</a>
                            </li>
                            <li>
                                <a class="btn btn-outline-light btn-floating m-1 iconlink"
                                    href="https://www.github.com/reuzun/watchOnline-Nodejs" target="_blank"
                                    role="button"><i class="fa fa-envelope"></i>Mail</a>
                            </li>
                        </ul>
                    </div>
                    <!--Grid column-->

                </div>
                <!--Grid row-->
            </div>
            <!-- Grid container -->

            <!-- Copyright -->
            <div class="text-center p-3" style="background-color: rgba(0, 0, 0, 0.2);">
                © 2021 Copyright:
                <span class="text-white" href="#">WatchOnline</span>
            </div>
            <!-- Copyright -->
        </footer>
    </div>


    <!-- Client-Server communication script -->
    <script src="/socket.io/socket.io.js"></script>
    <script type="module">

        //import VideoRoom from '/./VideoRoom.js';
        //import VideoPlayer from '/./VideoPlayer.js';
        //import Chat from '/./Chat.js';
        //import Message from '/./Message.js';
        


        var myRoomId = '<%=roomId%>';
        //const socket = io.connect(`${'<%=URL%>'}/room/${myRoomId}`); // Our server.js portnumber
        //console.log(`${'<%=URL%>'}/room/${myRoomId}`)
        const socket = io.connect(`http://localhost:${'<%=PORT%>'}`);
        let currentVideoId = "<%=videoId%>"
        
        var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        var bool_flag_1 = false;

        var player;
        window.onYouTubeIframeAPIReady = function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '390',
                width: '640',
                videoId: "<%=videoId%>",
                playerVars: {
                    'playsinline': 1
                },
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': (event) => {
                        if (Math.abs(lastTime - player.getCurrentTime()) > 2) {
                            let time = player.getCurrentTime();
                            socket.emit('clientSeek', time);
                        }
                        else if (event.data == YT.PlayerState.PLAYING || event.data == YT.PlayerState.UNSTARTED || event.data == YT.PlayerState.BUFFERING) {
                            socket.emit('statusChanged', 1, myRoomId)
                        }
                        else if (event.data == YT.PlayerState.ENDED) {
                            socket.emit('videoended');
                        }
                        else {
                            socket.emit('statusChanged', 0, myRoomId);
                        }
                        
                    }
                }
            });
        }

        let userId = undefined;
        socket.on('connected', (str, id)=>{
            console.log(str);
            userId = id;
            socket.emit("save", myRoomId);
        });

        socket.on('newMessage', (msg)=>{
            msg = JSON.parse(msg);
            chat_message(msg.sender, msg.message, msg.time);
        });

        socket.on("statusChange", (status)=>{
            if (status == 0) {
                player.pauseVideo();
            }
            else if (status == 1) {
                player.playVideo();
            }
        });

        socket.on("seek", (time)=>{
            player.seekTo(time, false);
        });

        var lastTime = 0;
        function onPlayerReady(event) {
            setTimeout(() => event.target.playVideo(), 100);
            setInterval(() => {
                if (player.getPlayerState() == 2) return;
                let time = player.getCurrentTime();
                //socket.emit("currentTime", time, currentVideoId, myRoomId)
                bool_flag_1 = true;
                lastTime = time;
            }, 250)
            //socket.emit('init', myRoomId);
        }


        let chatSubmit = document.getElementById('chatsubmit');
        let chatSubmitFunc = () => {
            console.log("clicked.")
            let messageTxt = document.getElementById('message').value;
            if (messageTxt.length == 0) return;
            socket.emit("message", userId, messageTxt)
            messageTxt = document.getElementById('message').value = "";
        };
        chatSubmit.onclick = () => {
            chatSubmitFunc();
        }
        document.addEventListener('keyup', (e) => {
            let messageTxt = document.getElementById('message')
            if (e.keyCode == 13 && document.activeElement == messageTxt) {
                chatSubmitFunc();
            }
        });



    </script>


</body>

</html>